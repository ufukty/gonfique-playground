html,
body {
  width: 100vw;
  min-height: 100vh;
}

html,
body,
.editor,
.editor-pane {
  overflow-x: hidden;
}

a {
  text-decoration: none;
  color: inherit;
  transition: color 0.2s ease-in-out;
}

body {
  --whitespace: 20px;
  --total-whitespace: ((var(--no-columns) + 1) * var(--whitespace));

  padding: var(--whitespace);

  display: grid;
  grid-template-columns: repeat(calc((100vw - var(--total-whitespace)) / var(--no-columns)), var(--no-columns));
  justify-content: stretch;
  align-items: stretch;
  gap: var(--whitespace);

  @media screen and (width<1000px) {
    --no-columns: 1;
    /* leaves empty space around for user to use to scroll the page */
    gap: calc(var(--whitespace) * 4) var(--whitespace);
    padding-bottom: calc(var(--whitespace) * 4);
    grid-template-rows: min-content repeat(3, minmax(300px, 60svh)) min-content;
    grid-template-areas:
      "header"
      "input"
      "config"
      "output"
      "footer";
  }

  @media screen and (1000px<=width) and (width<1500px) {
    --no-columns: 2;
    grid-template-rows: repeat(2, 1fr) min-content;
    grid-template-areas:
      "header input"
      "config output"
      "footer footer";
  }

  @media screen and (1500px<=width) {
    --no-columns: 3;
    grid-template-areas:
      "header config output"
      "input config output"
      "footer footer footer";
  }

  #input-editor {
    grid-area: input;
  }

  #config-editor {
    grid-area: config;
  }

  #output-editor {
    grid-area: output;
  }

  .editor {
    width: calc((100vw - var(--total-whitespace)) / var(--no-columns));

    display: flex;
    flex-direction: column;

    border-radius: 8px;
    box-shadow: 0 10px 20px -10px light-dark(#9ca5af7e, #000000);
    border: 2px solid light-dark(#b2b7bd, #262a2f);

    & > .header {
      width: 100%;
      padding: 10px 20px;
      line-height: normal;

      background-color: light-dark(#ffffff, #0d1116);
      border-bottom: 2px solid light-dark(#c5ccd5, #262a2f);

      font-weight: bold;
      font-size: 1rem;

      .hint {
        padding: 3px 5px;
        border-radius: 4px;
        color: light-dark(#ff7e15, #ffb47e);
        background-color: light-dark(#fff3e9, #502b0c);
        transform: skew(20deg);
      }
    }

    & > .editor-pane {
      flex-grow: 1;
      background-color: light-dark(#ffffff, #0d1116);
    }
  }

  header {
    grid-area: header;

    a {
      text-decoration: underline;
    }

    & > *:not(:is(:first-child, :last-child)) {
      margin: 10px 0;
    }

    h1 {
      font-size: 2em;
    }

    p {
      opacity: 0.8;
      max-width: 500px;
    }
  }

  footer {
    grid-area: footer;
    width: 100%;

    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;

    text-align: center;
    text-wrap: balance;

    a {
      padding-inline: 7px;
      text-decoration: underline;

      &:hover {
        color: light-dark(#000000, #dbebff);
      }
    }
  }
}
